import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

const BASE_URL = "http://localhost:8080/api/payroll";

export default function PayrollPayment() {
  const [instruction, setInstruction] = useState({
    paymentCurrency: "",
    debitAccount: "",
    date: "",
  });

  const [payment, setPayment] = useState({
    payeeDetails: "",
    payeeName: "",
    accountNumber: "",
    reference: "",
    amount: "",
  });

  const navigate = useNavigate();

  const handleInstructionChange = (e) => {
    setInstruction({ ...instruction, [e.target.name]: e.target.value });
  };

  const handlePaymentChange = (e) => {
    setPayment({ ...payment, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const batch = {
        instruction,
        payments: [payment],
        status: "Draft",
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString(),
      };

      await axios.post(`${BASE_URL}/batch`, batch);

      alert("Batch saved successfully!");
      navigate("/manage-payroll"); // redirect to ManagePayroll page
    } catch (err) {
      console.error("Failed to save batch", err);
      alert("Failed to save batch. Check console for details.");
    }
  };

  return (
    <div className="container mt-3">
      <h2>Create Payroll</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Payment Currency</label>
          <input
            type="text"
            name="paymentCurrency"
            value={instruction.paymentCurrency}
            onChange={handleInstructionChange}
          />
        </div>
        <div>
          <label>Debit Account</label>
          <input
            type="text"
            name="debitAccount"
            value={instruction.debitAccount}
            onChange={handleInstructionChange}
          />
        </div>
        <div>
          <label>Date</label>
          <input
            type="date"
            name="date"
            value={instruction.date}
            onChange={handleInstructionChange}
          />
        </div>
        <hr />
        <div>
          <label>Payee Details</label>
          <input
            type="text"
            name="payeeDetails"
            value={payment.payeeDetails}
            onChange={handlePaymentChange}
          />
        </div>
        <div>
          <label>Payee Name</label>
          <input
            type="text"
            name="payeeName"
            value={payment.payeeName}
            onChange={handlePaymentChange}
          />
        </div>
        <div>
          <label>Account Number</label>
          <input
            type="text"
            name="accountNumber"
            value={payment.accountNumber}
            onChange={handlePaymentChange}
          />
        </div>
        <div>
          <label>Reference</label>
          <input
            type="text"
            name="reference"
            value={payment.reference}
            onChange={handlePaymentChange}
          />
        </div>
        <div>
          <label>Amount</label>
          <input
            type="number"
            name="amount"
            value={payment.amount}
            onChange={handlePaymentChange}
          />
        </div>
        <button type="submit">Submit Payroll</button>
      </form>
    </div>
  );
}
